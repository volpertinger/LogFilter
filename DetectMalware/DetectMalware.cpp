#include <iostream>
#include <string>
#include <nlohmann/json.hpp>

using json = nlohmann::json;

const std::string writeFile = "WriteFile";
const std::string createFile = "CreateFile";
const std::string maliciousFileName = "Fix-Your-Files.txt";
const std::string aes = "aes.";
const std::string rsa = "rsa.";

class OperationData {

public:
	std::string detail;
	std::string operation;
	std::string pid;
	std::string path;
	std::string processIndex;
	std::string processName;
	std::string result;
	std::string timeOfDay;

	bool isMalicious() {
		return (
			(
				(operation == writeFile || operation == createFile) &&
				((path.find(maliciousFileName) != std::string::npos) ||
					(path.find(aes) != std::string::npos) ||
					(path.find(rsa) != std::string::npos))
				)
			);
	}
};


int main(int argc, char* argv[]) {

	if (argc != 2) {
		std::cerr << "Usage: " << argv[0] << " <input json event array>" << std::endl;
		return 1;
	}

	std::string jsonInput = argv[1];

	auto jsonData = json::parse(jsonInput);

	OperationData operationData = {
		jsonData["Detail"],
		jsonData["Operation"],
		jsonData["PID"],
		jsonData["Path"],
		jsonData["ProcessIndex"],
		jsonData["Process_Name"],
		jsonData["Result"],
		jsonData["Time_of_Day"]
	};

	if (operationData.isMalicious()) {
		std::cout << operationData.pid;
		return 0;
	}

	return 1;
}
